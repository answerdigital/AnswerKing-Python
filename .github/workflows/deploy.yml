name: Build and deploy

on:
  push:
    branches: [ "release-*"]

env:
  AWS_REGION: eu-west-2
  ECS_SERVICE: ak-python-ecs-service
  ECS_CLUSTER: ak-python-ecs-cluster
  ECS_TASK_DEFINITION: task-definition.json
  CONTAINER_NAME: ak-python-container
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}



jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
          contents: read
          packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.PYTHON_TEST_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.PYTHON_TEST_SECRET_KEY }}
        aws-region: eu-west-2


    - name: Log in to github registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set version variable
      run: |
        echo "VERSION=$(echo $GITHUB_REF | sed -e 's#refs/heads/release-#v#g')" >> $GITHUB_ENV

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw, value=latest
          type=raw, value=${{ env.VERSION }}

    - name: Build image
      id: build-image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ak-python-task --query taskDefinition > ${{ env.ECS_TASK_DEFINITION }}

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.imageid }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
