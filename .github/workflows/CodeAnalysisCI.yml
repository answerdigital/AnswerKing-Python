name: Static_code_analysis

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_dispatch:
permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results


jobs:
  black_test:
    name: Black Test
    runs-on: ubuntu-latest
    steps:
      - uses : actions/checkout@v3
      - uses: ./.github/actions/dependencies
      - name: Run Black Test
        run: poetry run black . --line-length=79 --check
  pycodestyle_test:
    name: Pycodestyle Test
    runs-on: ubuntu-latest
    steps:
      - uses : actions/checkout@v3
      - uses: ./.github/actions/dependencies
      - name: Run Pycodestyle Test
        run: poetry run pycodestyle . --ignore=E501
  pyright_test:
    name: Pyright Test
    runs-on: ubuntu-latest
    steps:
      - uses : actions/checkout@v3
      - uses: ./.github/actions/dependencies
      - name: Run Pyright Test
        run: poetry run pyright .
  unit_test_and_sonar_cloud_report:
    name: Unit Test and SonarCloud Test
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DATABASE_PASS }}
          MYSQL_DATABASE: answerking_app
        ports: [ '3306:3306' ]
    env:
      DATABASE_NAME: answerking_app
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASS: ${{ secrets.DATABASE_PASS }}
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: 3306
      DATABASE_ENGINE: django.db.backends.mysql
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DJANGO_SETTINGS_MODULE: answerking.settings.development
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/dependencies
      - name: Run Migrations
        run: poetry run python manage.py migrate
      - name: Run Unit Tests
        run: poetry run python manage.py test answerking_app.tests.test_unit
      - name: generate coverage tests
        run: poetry run coverage run manage.py test --noinput
      - name: generate report
        run: poetry run coverage xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.python.coverage.reportPaths=coverage.xml
